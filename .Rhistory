value_matrix = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix[,1] = MdB$cou_agr_cal_weight_1m[1]
value_matrix[,2] = MdB$Q12_1m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Europa")
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A1
MdB$cou_agr_cal_weight_de_B1opp
MdB[1:80, c("Q12de_A1", "cou_agr_cal_weight_de_A1","Q12de_B1opp", "cou_agr_cal__weight_de_B1opp",
"cou_agr_cal_weight_1")]
# Question 1: Europe # Note: inverse
# MdB:
# de_B1 opposite direction:
MdB$Q12de_B1opp <- 100 - MdB$Q12de_B1
# Combine both topic blocks:
MdB$Q12_1 <- NA
MdB$Q12_1 <- ifelse(is.na(MdB$Q12de_A1) & !is.na(MdB$Q12de_B1opp),
MdB$Q12de_B1opp, MdB$Q12de_A1)
MdB[1:80, c("Q12de_A1", "Q12de_B1opp", "Q12_1")]
# Mean value over both blocks:
sum(is.na(Q12_1))
MdB$Q12_1m <- mean(MdB$Q12_1)
MdB$Q12_1m
MdB[1:80, c("Q12de_A1", "Q12de_B1opp", "Q12_1")]
mean(MdB$q10dea1)
mean(MdB$Q10de_A1)
mean(MdB$Q12de_A1)
mean(MdB$Q12de_A1, use.na = FALSE)
MdB$Q12de_A1
mean(MdB$Q12de_A1)
?mean
mean(MdB$Q12de_A1, na.rm = TRUE)
mean(MdB$Q12de_B1opp, na.rm = TRUE)
MdB$cou_agr_cal_de_A1
# Citizen:
# de_B1 opposite direction:
MdB$cou_agr_cal_weight_de_B1opp <- 100 - MdB$cou_agr_cal_weight_de_B1
MdB$cou_agr_cal_weight_de_B1opp
MdB$cou_agr_cal_weight_de_B1
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix[,1] = MdB$cou_agr_cal_weight_1m[1]
value_matrix[,2] = MdB$Q12_1m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Europa")
# Combine both topic blocks:
MdB$Q12_2 <- NA
### Results Data MdB ###
### 05.12.2019 ###
# Remove everything from the current environment:
rm(list = ls())
# Set working directory
setwd()
# Load programmes
library(rio)
library(haven)
######################
# Get new Data (rds) #
MdB <- import("Data_MdB_international_final3.rds")
# MdB guesses #
# Question 1: Europe # Note: inverse
# MdB:
# de_B1 opposite direction:
MdB$Q12de_B1opp <- 100 - MdB$Q12de_B1
# Combine both topic blocks:
MdB$Q12_1 <- NA
MdB$Q12_1 <- ifelse(is.na(MdB$Q12de_A1) & !is.na(MdB$Q12de_B1opp),
MdB$Q12de_B1opp, MdB$Q12de_A1)
MdB[1:80, c("Q12de_A1", "Q12de_B1opp", "Q12_1")]
# Mean value over both blocks:
sum(is.na(Q12_1))
MdB$Q12_1m <- mean(MdB$Q12_1)
# Citizen:
# de_B1 opposite direction:
MdB$cou_agr_cal_weight_de_B1opp <- 100 - MdB$cou_agr_cal_weight_de_B1
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A1
MdB$cou_agr_cal_weight_de_B1opp
# Combine both topic blocks:
MdB$cou_agr_cal_weight_1 <- NA
MdB$cou_agr_cal_weight_1 <- ifelse(is.na(MdB$Q12de_A1) & !is.na(MdB$Q12de_B1opp),
MdB$cou_agr_cal_weight_de_B1opp, MdB$cou_agr_cal_weight_de_A1)
MdB[1:80, c("Q12de_A1", "cou_agr_cal_weight_de_A1","Q12de_B1opp", "cou_agr_cal__weight_de_B1opp",
"cou_agr_cal_weight_1")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_1))
MdB$cou_agr_cal_weight_1m <- mean(MdB$cou_agr_cal_weight_1)
# MdB guesses:
MdB$Q12_1guess <- MdB$cou_agr_cal_weight_1 - MdB$Q12_1
MdB[1:80, c("cou_agr_cal_weight_1","Q12_1", "Q12_1guess")]
MdB$Q12_1guess <- abs(MdB$Q12_1guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix[,1] = MdB$cou_agr_cal_weight_1m[1]
value_matrix[,2] = MdB$Q12_1m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Europa")
# names.arg = df$Block
# Question 2: Law and Order #
# MdB:
# Combine both topic blocks:
MdB$Q12_2 <- NA
MdB$Q12_2 <- ifelse(is.na(MdB$Q12de_A2) & !is.na(MdB$Q12de_B2),
MdB$Q12de_B2, MdB$Q12de_A2)
MdB[1:80, c("Q12de_A2", "Q12de_B2", "Q12_2")]
# Mean value over both blocks:
sum(is.na(MdB$Q12_2))
MdB$Q12_2m <- mean(MdB$Q12_2)
# Citizen:
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A2
MdB$cou_agr_cal_weight_de_B2
# Combine both topic blocks:
MdB$cou_agr_cal_weight_2 <- NA
MdB$cou_agr_cal_weight_2 <- ifelse(is.na(MdB$Q12de_A2) & !is.na(MdB$Q12de_B2),
MdB$cou_agr_cal_weight_de_B2, MdB$cou_agr_cal_weight_de_A2)
MdB[1:80, c("Q12de_A2", "cou_agr_cal_weight_de_A2","Q12de_B2", "cou_agr_cal_weight_de_B2",
"cou_agr_cal_weight_2")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_2))
MdB$cou_agr_cal_weight_2m <- mean(MdB$cou_agr_cal_weight_2)
# MdB guesses:
MdB$Q12_2guess <- MdB$cou_agr_cal_weight_2 - MdB$Q12_2
MdB[1:80, c("cou_agr_cal_weight_2","Q12_2", "Q12_2guess")]
MdB$Q12_2guess <- abs(MdB$Q12_2guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix2 = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix2[,1] = MdB$cou_agr_cal_weight_2m[1]
value_matrix2[,2] = MdB$Q12_2m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix2, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Recht und Ordnung")
# Question 3: Economy #
# MdB:
# Combine both topic blocks:
MdB$Q12_3 <- NA
MdB$Q12_3 <- ifelse(is.na(MdB$Q12de_A3) & !is.na(MdB$Q12de_B3),
MdB$Q12de_B3, MdB$Q12de_A3)
MdB[1:80, c("Q12de_A3", "Q12de_B3", "Q12_3")]
# Mean value over both blocks:
sum(is.na(MdB$Q12_3))
MdB$Q12_3m <- mean(MdB$Q12_3, na.rm = TRUE)
# Citizen:
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A3
MdB$cou_agr_cal_weight_de_B3
# Combine both topic blocks:
MdB$cou_agr_cal_weight_3 <- NA
MdB$cou_agr_cal_weight_3 <- ifelse(is.na(MdB$Q12de_A3) & !is.na(MdB$Q12de_B3),
MdB$cou_agr_cal_weight_de_B3, MdB$cou_agr_cal_weight_de_A3)
MdB[1:80, c("Q12de_A3", "cou_agr_cal_weight_de_A3","Q12de_B3", "cou_agr_cal_weight_de_B3",
"cou_agr_cal_weight_3")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_3))
MdB$cou_agr_cal_weight_3m <- mean(MdB$cou_agr_cal_weight_3)
# MdB guesses:
MdB$Q12_3guess <- MdB$cou_agr_cal_weight_3 - MdB$Q12_3
MdB[1:80, c("cou_agr_cal_3","Q12_3", "Q12_3guess")]
MdB$Q12_3guess <- abs(MdB$Q12_3guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix3 = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix3[,1] = MdB$cou_agr_cal_weight_3m[1]
value_matrix3[,2] = MdB$Q12_3m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix3, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Wirtschaft")
# Question 4: Democracy
# MdB:
# Combine both topic blocks:
MdB$Q12_4 <- NA
MdB$Q12_4 <- ifelse(is.na(MdB$Q12de_A4) & !is.na(MdB$Q12de_B4),
MdB$Q12de_B4, MdB$Q12de_A4)
MdB[1:80, c("Q12de_A4", "Q12de_B4", "Q12_4")]
# Mean value over both blocks:
sum(is.na(MdB$Q12_4))
MdB$Q12_4m <- mean(MdB$Q12_4)
# Citizen:
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A4
MdB$cou_agr_cal_weight_de_B4
# Combine both topic blocks:
MdB$cou_agr_cal_weight_4 <- NA
MdB$cou_agr_cal_weight_4 <- ifelse(is.na(MdB$Q12de_A4) & !is.na(MdB$Q12de_B4),
MdB$cou_agr_cal_weight_de_B4, MdB$cou_agr_cal_weight_de_A4)
MdB[1:80, c("Q12de_A4", "cou_agr_cal_weight_de_A4","Q12de_B4", "cou_agr_cal_weight_de_B4",
"cou_agr_cal_weight_4")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_4))
MdB$cou_agr_cal_weight_4m <- mean(MdB$cou_agr_cal_weight_4)
# MdB guesses:
MdB$Q12_4guess <- MdB$cou_agr_cal_weight_4 - MdB$Q12_4
MdB[1:80, c("cou_agr_cal_weight_4","Q12_4", "Q12_4guess")]
MdB$Q12_4guess <- abs(MdB$Q12_4guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix4 = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix4[,1] = MdB$cou_agr_cal_weight_4m[1]
value_matrix4[,2] = MdB$Q12_4m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix4, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Demokratie")
# Question 5: Environment #
# MdB:
# Combine both topic blocks:
MdB$Q12_5 <- NA
MdB$Q12_5 <- ifelse(is.na(MdB$Q12de_A5) & !is.na(MdB$Q12de_B5),
MdB$Q12de_B5, MdB$Q12de_A5)
MdB[1:80, c("Q12de_A5", "Q12de_B5", "Q12_5")]
# Mean value over both blocks:
sum(is.na(MdB$Q12_5))
MdB$Q12_5m <- mean(MdB$Q12_5)
# Citizen:
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A5
MdB$cou_agr_cal_weight_de_B5
# Combine both topic blocks:
MdB$cou_agr_cal_weight_5 <- NA
MdB$cou_agr_cal_weight_5 <- ifelse(is.na(MdB$Q12de_A5) & !is.na(MdB$Q12de_B5),
MdB$cou_agr_cal_weight_de_B5, MdB$cou_agr_cal_weight_de_A5)
MdB[1:80, c("Q12de_A5", "cou_agr_cal_weight_de_A5","Q12de_B5", "cou_agr_cal_weight_de_B5",
"cou_agr_cal_weight_5")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_5))
MdB$cou_agr_cal_weight_5m <- mean(MdB$cou_agr_cal_weight_5)
# MdB guesses:
MdB$Q12_5guess <- MdB$cou_agr_cal_weight_5 - MdB$Q12_5
MdB[1:80, c("cou_agr_cal_weight_5","Q12_5", "Q12_5guess")]
MdB$Q12_5guess <- abs(MdB$Q12_5guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix5 = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix5[,1] = MdB$cou_agr_cal_weight_5m[1]
value_matrix5[,2] = MdB$Q12_5m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix5, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Umwelt")
# Question 6: Social issues # Note: inverse
# MdB:
# de_A6 opposite direction:
MdB$Q12de_A6opp <- 100 - MdB$Q12de_A6
# Combine both topic blocks:
MdB$Q12_6 <- NA
MdB$Q12_6 <- ifelse(is.na(MdB$Q12de_A6opp) & !is.na(MdB$Q12de_B6),
MdB$Q12de_B6, MdB$Q12de_A6opp)
MdB[1:80, c("Q12de_A6opp", "Q12de_B6", "Q12_6")]
# Mean value over both blocks:
sum(is.na(MdB$Q12_6))
MdB$Q12_6m <- mean(MdB$Q12_6, na.rm = TRUE)
# Citizen:
# de_A6 opposite direction:
MdB$cou_agr_cal_weight_de_A6opp <- 100 - MdB$cou_agr_cal_weight_de_A6
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A6opp
MdB$cou_agr_cal_weight_de_B6
# Combine both topic blocks:
MdB$cou_agr_cal_weight_6 <- NA
MdB$cou_agr_cal_weight_6 <- ifelse(is.na(MdB$Q12de_A6opp) & !is.na(MdB$Q12de_B6),
MdB$cou_agr_cal_weight_de_B6, MdB$cou_agr_cal_weight_de_A6opp)
MdB[1:80, c("Q12de_A6", "cou_agr_cal_weight_de_A6opp","Q12de_B6", "cou_agr_cal_weight_de_B6",
"cou_agr_cal_weight_6")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_6))
MdB$cou_agr_cal_weight_6m <- mean(MdB$cou_agr_cal_weight_6)
# MdB guesses:
MdB$Q12_6guess <- MdB$cou_agr_cal_weight_6 - MdB$Q12_6
MdB[1:80, c("cou_agr_cal_weight_6","Q12_6", "Q12_6guess")]
MdB$Q12_6guess <- abs(MdB$Q12_6guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix6 = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix6[,1] = MdB$cou_agr_cal_weight_6m[1]
value_matrix6[,2] = MdB$Q12_6m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix6, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Soziales")
# Question 6: Ethics
# MdB:
# Combine both topic blocks:
MdB$Q12_7 <- NA
MdB$Q12_7 <- ifelse(is.na(MdB$Q12de_A7) & !is.na(MdB$Q12de_B7),
MdB$Q12de_B7, MdB$Q12de_A7)
MdB[1:80, c("Q12de_A7", "Q12de_B7", "Q12_7")]
# Mean value over both blocks:
sum(is.na(MdB$Q12_7))
MdB$Q12_7m <- mean(MdB$Q12_7, na.rm = TRUE)
# Citizen:
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A7
MdB$cou_agr_cal_weight_de_B7
# Combine both topic blocks:
MdB$cou_agr_cal_weight_7 <- NA
MdB$cou_agr_cal_weight_7 <- ifelse(is.na(MdB$Q12de_A7) & !is.na(MdB$Q12de_B7),
MdB$cou_agr_cal_weight_de_B7, MdB$cou_agr_cal_weight_de_A7)
MdB[1:80, c("Q12de_A7", "cou_agr_cal_weight_de_A7","Q12de_B7", "cou_agr_cal_weight_de_B7",
"cou_agr_cal_weight_7")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_7))
MdB$cou_agr_cal_weight_7m <- mean(MdB$cou_agr_cal_weight_7)
# MdB guesses:
MdB$Q12_7guess <- MdB$cou_agr_cal_weight_7 - MdB$Q12_7
MdB[1:80, c("cou_agr_cal_weight_7","Q12_7", "Q12_7guess")]
MdB$Q12_7guess <- abs(MdB$Q12_7guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix7 = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix7[,1] = MdB$cou_agr_cal_weight_7m[1]
value_matrix7[,2] = MdB$Q12_7m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix7, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Ethik")
# Question 8: Migration # Note: inverse
# MdB:
# de_B8 opposite direction:
MdB$Q12de_B8opp <- 100 - MdB$Q12de_B8
# Combine both topic blocks:
MdB$Q12_8 <- NA
MdB$Q12_8 <- ifelse(is.na(MdB$Q12de_A8) & !is.na(MdB$Q12de_B8opp),
MdB$Q12de_B8opp, MdB$Q12de_A8)
MdB[1:80, c("Q12de_A8", "Q12de_B8opp", "Q12_8")]
# Mean value over both blocks:
sum(is.na(MdB$Q12_8))
MdB$Q12_8m <- mean(MdB$Q12_8, na.rm = TRUE)
# Citizen:
# de_B1 opposite direction:
MdB$cou_agr_cal_weight_de_B8opp <- 100 - MdB$cou_agr_cal_weight_de_B8
# Check citizen answers:
MdB$cou_agr_cal_weight_de_A8
MdB$cou_agr_cal_weight_de_B8opp
# Combine both topic blocks:
MdB$cou_agr_cal_weight_8 <- NA
MdB$cou_agr_cal_weight_8 <- ifelse(is.na(MdB$Q12de_A8) & !is.na(MdB$Q12de_B8opp),
MdB$cou_agr_cal_weight_de_B8opp, MdB$cou_agr_cal_weight_de_A8)
MdB[1:80, c("Q12de_A8", "cou_agr_cal_weight_de_A8","Q12de_B8opp", "cou_agr_cal_weight_de_B8opp",
"cou_agr_cal_weight_8")]
# Mean value over both blocks:
sum(is.na(MdB$cou_agr_cal_weight_8))
MdB$cou_agr_cal_weight_8m <- mean(MdB$cou_agr_cal_weight_8)
# MdB guesses:
MdB$Q12_8guess <- MdB$cou_agr_cal_weight_8 - MdB$Q12_8
MdB[1:80, c("cou_agr_cal_weight_8","Q12_8", "Q12_8guess")]
MdB$Q12_8guess <- abs(MdB$Q12_8guess) # absolute values
#Create a Matrix which will help in creating the plot
value_matrix8 = matrix(nrow = 1, ncol = 2)
#An empty matrix is a necessary requirement prior
#to copying data
value_matrix8[,1] = MdB$cou_agr_cal_weight_8m[1]
value_matrix8[,2] = MdB$Q12_8m[1]
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix8, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Migration")
# MdB guess accuracy over all items (sum) #
MdB$guess_accur <- MdB$Q12_1guess + MdB$Q12_2guess + MdB$Q12_3guess + MdB$Q12_4guess + MdB$Q12_5guess + MdB$Q12_6guess + MdB$Q12_7guess + MdB$Q12_8guess
min_acc <- min(MdB$guess_accur, na.rm = TRUE)
max_acc <- max(MdB$guess_accur, na.rm = TRUE)
min_acc / 8
max_acc / 8
# Group comparisons #
library(ggplot2)
# Party (V4) #
# General
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = guess_accur))
# Europe
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_1guess))
# Law and Order
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_2guess))
# Economy
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_3guess))
# Democracy
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_4guess))
# Environment
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_5guess))
# Social issues
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_6guess))
# Ethics
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_7guess))
# Migration
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = Q12_8guess))
# Fox-hedgehog (Q2) #
class(MdB$Q2)
MdB$Q2f <- as.factor(MdB$Q2)
# General
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = Q2f, y = guess_accur))
# Expert (Q1de_X) #
# Economy
class(MdB$Q1de_1)
MdB$Q1de_1f <- as.factor(MdB$Q1de_1)
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = Q1de_1f, y = Q12_1guess))
# Social issues
class(MdB$Q1de_10)
MdB$Q1de_10f <- as.factor(MdB$Q1de_10)
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = Q1de_10f, y = Q12_6guess))
# Environment
class(MdB$Q1de_7)
MdB$Q1de_7f <- as.factor(MdB$Q1de_7)
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = Q1de_7f, y = Q12_3guess))
#Note that the "beside" argument has to be kept "TRUE" in order to place the bars side by side
barplot(value_matrix8, beside = TRUE, space = c(0.1, 0.1),
names.arg = c("TatsÃ¤chlich", "GeschÃ¤tzt"),
col = c("blue", "lightblue"), ylim = c(0, 100),
xlab = "Zustimmung BÃ¼rger (in %)", main = "Migration")
# MdB guess accuracy over all items (sum) #
MdB$guess_accur <- MdB$Q12_1guess + MdB$Q12_2guess + MdB$Q12_3guess + MdB$Q12_4guess + MdB$Q12_5guess + MdB$Q12_6guess + MdB$Q12_7guess + MdB$Q12_8guess
min_acc <- min(MdB$guess_accur, na.rm = TRUE)
max_acc <- max(MdB$guess_accur, na.rm = TRUE)
min_acc / 8
max_acc / 8
# Group comparisons #
library(ggplot2)
# General
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = guess_accur))
# General
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = guess_accur))
?ggplot
?geom_boxplot
# General
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = guess_accur), notch = 1)
# General
ggplot(data = MdB) +
geom_boxplot(mapping = aes(x = V4, y = guess_accur), fill = "white", colour = "#3366FF")
?read.csv
?read_csv
knitr::opts_chunk$set(echo = TRUE)
df_XXV <- read_csv(file = "de_XXV.csv", col_names = TRUE)
pacman::p_load(tidyverse, furrr, rvest, ggthemes, lubridate, rio, haven)
df_XXV <- read_csv(file = "de_XXV.csv", col_names = TRUE)
wd()
setwd("C:/Users/Felix/OneDrive - bwedu/Documents/Studium/AG Breunig/Ben/scraping_felix/R")
df_XXV <- read_csv(file = "de_XXV.csv", col_names = TRUE)
df_XXV <- read_csv(file = "df_XXV.csv", col_names = TRUE)
df_XXIV <- read.csv(df_XXV, header = TRUE)
df_XXIV <- read.csv(df_XXV.csv, header = TRUE)
df_XXIV <- read.csv(file = "df_XXV.csv", header = TRUE)
View(df_XXV)
df_XXV <- read_csv(file = "df_XXV.csv", col_names = TRUE)
df_XXV <- read_csv(file = "df_XXV.csv", col_names = TRUE)
View(df_XXV)
df_XXV <- read_csv(file = "df_XXV.csv", col_names = TRUE)
df_XXIV <- read.csv(file = "df_XXV.csv", header = TRUE)
View(df_XXV)
df_XXV <- read_csv(file = "df_XXV.csv", col_names = TRUE)
View(df_XXV)
View(df_XXIV)
View(df_XXIV)
?read.csv
df_XXV <- read.csv(file = "df_XXV.csv", header = TRUE)
df_XXIII <- read.csv(file = "df_XXIII.csv", header = TRUE)
df_XXI <- read.csv(file = "df_XXI.csv", header = TRUE)
df_XX <- read.csv(file = "df_XX.csv", header = TRUE)
all_indexpagedata <- rbind(df_XXV, df_XXIV, df_XXIII, df_XXII, df_XXI, df_XX)
df_XXII <- read.csv(file = "df_XXII.csv", header = TRUE)
df_XXI <- read.csv(file = "df_XXI.csv", header = TRUE)
df_XX <- read.csv(file = "df_XX.csv", header = TRUE)
df_XXIV <- read.csv(file = "df_XXIV.csv", header = TRUE)
df_XXIII <- read.csv(file = "df_XXIII.csv", header = TRUE)
all_indexpagedata <- rbind(df_XXV, df_XXIV, df_XXIII, df_XXII, df_XXI, df_XX)
View(all_indexpagedata)
?rbind
?rbind
all_indexpagedata <- rbind(df_XXV, df_XXIV, df_XXIII, df_XXII, df_XXI, df_XX)[, -1]
View(all_indexpagedata)
write.csv(all_indexpagedata, file = "indexpagedata.csv")
